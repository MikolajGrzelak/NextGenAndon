# Generated by Django 5.1.5 on 2025-04-02 07:13

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='C2MaterialGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Grupa materiałowa (np. Korpus, Płytka)')),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client_number', models.CharField(max_length=50, unique=True)),
                ('client_name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ExcelUpload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='uploads/')),
                ('upload_type', models.CharField(choices=[('items', 'Importuj Itemy'), ('clients', 'Importuj Klientów'), ('locations', 'Importuj Lokacje'), ('scrap_codes', 'Importuj Kody złomu')], max_length=50)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('supplier', models.CharField(blank=True, max_length=150)),
                ('responsible', models.CharField(blank=True, max_length=150)),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('production_time', models.DecimalField(blank=True, decimal_places=2, help_text='Czas produkcji w godzinach, np. 1.5 = 1h 30min', max_digits=5, null=True)),
                ('gpg', models.CharField(blank=True, max_length=255, null=True)),
                ('production_line', models.CharField(blank=True, max_length=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('mo_number', models.CharField(max_length=50)),
                ('item_code', models.CharField(max_length=50)),
                ('quantity', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='QualityReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ScrapCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=3, unique=True, verbose_name='Kod złomu')),
                ('description', models.CharField(max_length=255, verbose_name='Opis')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseReason',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Powód zgłoszenia')),
            ],
        ),
        migrations.CreateModel(
            name='C2MaterialItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.CharField(max_length=50, unique=True, verbose_name='Numer itemu')),
                ('description', models.CharField(blank=True, max_length=200, verbose_name='Opis')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='core.c2materialgroup')),
            ],
        ),
        migrations.CreateModel(
            name='InvRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('awaiting_magazyn', 'W trakcie: Magazyn'), ('awaiting_dyrektor', 'W trakcie: Dyrektor'), ('awaiting_cycle', 'W trakcie: Cycle Count'), ('approved', 'Zatwierdzony'), ('rejected', 'Odrzucony'), ('cancelled', 'Anulowany')], default='awaiting_magazyn', max_length=20)),
                ('approved_at', models.DateTimeField(blank=True, null=True)),
                ('rejected_at', models.DateTimeField(blank=True, null=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inv_requests_approved', to=settings.AUTH_USER_MODEL)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inv_requests', to=settings.AUTH_USER_MODEL)),
                ('rejected_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inv_requests_rejected', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CycleCountRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('new', 'Nowe'), ('review', 'W trakcie'), ('closed', 'Zakończone'), ('removed', 'Usunięte')], default='new', max_length=20)),
                ('physical_qty', models.PositiveIntegerField(verbose_name='Ilość fizyczna')),
                ('system_qty', models.PositiveIntegerField(verbose_name='Ilość systemowa')),
                ('comment', models.TextField(blank=True, verbose_name='Komentarz')),
                ('closed_at', models.DateTimeField(blank=True, null=True, verbose_name='Data zamknięcia')),
                ('closed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='closed_cycle_requests', to=settings.AUTH_USER_MODEL, verbose_name='Zamknięte przez')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Zgłaszający')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item', verbose_name='Item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.location', verbose_name='Lokalizacja')),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('read', models.BooleanField(default=False)),
                ('url', models.URLField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductionOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mo_number', models.CharField(max_length=50, unique=True, verbose_name='Numer MO')),
                ('mo_quantity', models.PositiveIntegerField(verbose_name='Całkowita ilość MO')),
                ('produced_quantity', models.PositiveIntegerField(default=0, verbose_name='Ilość wykonana')),
                ('status', models.CharField(choices=[('new', 'Nowe'), ('in_progress', 'W realizacji'), ('wip', 'WIP'), ('printed', 'Wydrukowane'), ('completed', 'Zakończone'), ('stopped', 'Zatrzymane')], default='new', max_length=20, verbose_name='Status zlecenia')),
                ('production_line', models.CharField(blank=True, max_length=5, null=True, verbose_name='Linia produkcyjna')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data dodania')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Data zakończenia')),
                ('item', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.item', verbose_name='Item')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('production_line', models.CharField(default='SC1', max_length=5, verbose_name='Linia produkcyjna')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Data zaplanowana')),
                ('planned_week', models.PositiveIntegerField(blank=True, null=True, verbose_name='Zaplanowany tydzień')),
                ('planned_quantity', models.PositiveIntegerField(default=0, verbose_name='Ilość zaplanowana')),
                ('planned_percentage', models.DecimalField(decimal_places=2, default=100.0, max_digits=5, verbose_name='Procent realizacji')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data przypisania')),
                ('production_order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plans', to='core.productionorder', verbose_name='Zlecenie MO')),
            ],
        ),
        migrations.CreateModel(
            name='ProductionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('production_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.productionplan')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workplace', models.CharField(blank=True, max_length=50, null=True, verbose_name='Miejsce pracy')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InvRequestLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(help_text='Może być ujemna dla zdjęcia stanu')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lines', to='core.invrequest')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.location')),
                ('scrap_code', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='core.scrapcode')),
            ],
        ),
        migrations.CreateModel(
            name='ScrapEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(verbose_name='Ilość')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Koszt')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('total_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Całkowity koszt')),
                ('production_line', models.CharField(blank=True, default='SC1', max_length=5, null=True, verbose_name='Linia produkcyjna')),
                ('create_warehouse_request', models.BooleanField(default=False, verbose_name='Utwórz zgłoszenie magazynowe')),
                ('gpg', models.CharField(blank=True, max_length=50, null=True, verbose_name='GPG')),
                ('workplace', models.CharField(blank=True, default='ScanCoin', max_length=50, null=True, verbose_name='Miejsce pracy')),
                ('supplier', models.CharField(blank=True, max_length=50, null=True, verbose_name='Dostawca')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.item', verbose_name='Item')),
                ('quality_reason', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.qualityreason', verbose_name='Powód')),
                ('reported_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Zgłoszone przez')),
            ],
        ),
        migrations.CreateModel(
            name='SupportTicket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('technician', 'Technik'), ('engineer', 'Inżynier'), ('quality', 'Jakość')], max_length=20, verbose_name='Kategoria zgłoszenia')),
                ('workplace', models.CharField(max_length=50, verbose_name='Miejsce pracy')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Opis problemu')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data utworzenia')),
                ('status', models.CharField(choices=[('open', '🟢 Otwarte'), ('in_progress', '🟡 W trakcie'), ('closed', '🔴 Zamknięte')], default='open', max_length=20, verbose_name='Status')),
                ('taken_at', models.DateTimeField(blank=True, null=True, verbose_name='Czas podjęcia akcji')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Czas zamknięcia zgłoszenia')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Przypisane do')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Zgłoszone przez')),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Zamknięte przez')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.CharField(choices=[('gaming', '🎮 Gaming'), ('c2', '⚙️ C2'), ('rm5', '🏭 RM5'), ('scancoin', '💰 ScanCoin'), ('comestero', '💳 Comestero'), ('b2b', '📦 B2B')], default='c2', max_length=20, verbose_name='Lokalizacja')),
                ('category', models.CharField(choices=[('raw_materials', '📦 Braki surowców'), ('logistics_issue', '🚚 Błąd w dostawie'), ('return', '🔄 Zwrot na magazyn')], max_length=20, verbose_name='Kategoria zgłoszenia')),
                ('description', models.TextField(verbose_name='Opis problemu')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ilość')),
                ('status', models.CharField(choices=[('new', '🟢 Nowe'), ('in_progress', '🟡 W realizacji'), ('resolved', '🔴 Zamknięte')], default='new', max_length=20, verbose_name='Status')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data utworzenia')),
                ('resolved_at', models.DateTimeField(blank=True, null=True, verbose_name='Data zamknięcia')),
                ('handled_at', models.DateTimeField(blank=True, null=True, verbose_name='Data obsługi')),
                ('assigned_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='warehouse_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Przypisane do')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Zgłaszający')),
                ('handled_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='handled_warehouse_requests', to=settings.AUTH_USER_MODEL, verbose_name='Obsługujący')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.item', verbose_name='Item')),
                ('warehouse_reason', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.warehousereason', verbose_name='Powód zgłoszenia')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Treść komentarza')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data utworzenia')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Data edycji')),
                ('quantity', models.PositiveIntegerField(blank=True, null=True, verbose_name='Ilość')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Utworzone przez')),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.warehouserequest', verbose_name='Zgłoszenie')),
            ],
        ),
    ]
